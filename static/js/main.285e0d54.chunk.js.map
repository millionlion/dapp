{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","imageURIs","maxSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","i","tokenURI","trimmedTokenURI","replace","fetch","res","json","metadata","trimmedImagedURI","image","console","log","connectFailed","updateAccount","Screen","styled","div","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","ResponsiveWrapper","StyledLogo","img","StyledPreview","StyledHeader","StyledLink","App","input","len","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","getConfig","headers","Accept","configResponse","config","useEffect","style","padding","backgroundColor","alt","src","textAlign","fontSize","fontWeight","color","target","href","length","substring","borderRadius","height","width","Number","onClick","e","preventDefault","abiResponse","abi","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","disabled","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","claimNFTs","overflow","marginBottom","map","url","marginRight","marginTop","border","LIGHTPAPER","download","paddingLeft","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.285e0d54.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  imageURIs: [],\n  maxSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        imageURIs: action.payload.imageURIs,\n        maxSupply: action.payload.maxSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let imageURIs = []\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      let maxSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.maxSupply()\n        .call();\n\n      for (let i = 1; i <= totalSupply; i++) {\n        let tokenURI = await store\n          .getState()\n          .blockchain.smartContract.methods.tokenURI(`${i}`)\n          .call();\n\n        let trimmedTokenURI = tokenURI.replace(\"://\", \"/\");\n        let res = await fetch('https://millionlion.mypinata.cloud/' + trimmedTokenURI);\n        let metadata = await res.json();\n        let trimmedImagedURI = metadata.image.replace(\"://\", \"/\");\n\n        imageURIs[i] = 'https://millionlion.mypinata.cloud/' + trimmedImagedURI;\n      }\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          imageURIs,\n          maxSupply\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: 512px 512px;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 14px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 128px;\n  @media (min-width: 767px) {\n    width: 128px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledPreview = styled.img`\n  width: 204px;\n  transition: width 0.5s;\n  transition: height 0.5s;\n  @media (max-width: 600px) {\n    display: none;\n  }\n`;\n\nexport const StyledHeader = styled.img`\n  position: absolute;\n  top: 48px;\n  right: 48px;\n  width: 20%\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: 4px dashed var(--secondary);\n  background-color: var(--accent);\n  border-radius: 100%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `The ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"left\"}\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n      >\n        <s.Container ai={\"center\"} jc={\"left\"} fd={\"row\"}>\n          <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\n          <s.TextTitle\n            style={{\n              textAlign: \"center\",\n              fontSize: 50,\n              fontWeight: \"bold\",\n              color: \"var(--accent-text)\",\n            }}\n          >\n            {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n          </s.TextTitle>\n          <StyledHeader alt={\"header\"} src={\"/config/images/header.svg\"} />\n        </s.Container>\n\n        <s.Container ai={\"center\"} jc={\"left\"} fd={\"row\"}>\n          <s.TextDescription\n            style={{\n              textAlign: \"left\",\n              color: \"var(--primary-text)\",\n              padding: 24\n            }}\n          >\n            <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n              {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n            </StyledLink>\n          </s.TextDescription>\n        </s.Container>\n        <s.TextTitle\n          style={{\n            textAlign: \"center\",\n            fontSize: 24,\n            color: \"var(--primary-text)\",\n          }}\n        >\n          Unveiling - Dec, 2021\n        </s.TextTitle>\n        <s.SpacerSmall />\n        <ResponsiveWrapper>\n          <s.Container\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"var(--accent)\",\n              borderRadius: 24,\n              padding: 24,\n            }}\n          >\n            <div style={{ height: \"204px\", width: \"204px\" }}>\n              <StyledPreview alt={\"preview\"} src={\"/config/images/preview.png\"} style={{ borderRadius: 24 }} />\n            </div>\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"var(--accent)\",\n              padding: 24,\n              borderRadius: 24,\n            }}\n          >\n            <div style={{ height: \"204px\", width: \"204px\", textAlign: \"center\" }}>\n              <img src={\"/config/images/price.svg\"} />\n              {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n                <>\n                  <s.TextTitle\n                    style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                  >\n                    The sale has ended.\n                  </s.TextTitle>\n                  <s.TextDescription\n                    style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                  >\n                    You can still find {CONFIG.NFT_NAME} on\n                  </s.TextDescription>\n                  <s.SpacerSmall />\n                  <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                    {CONFIG.MARKETPLACE}\n                  </StyledLink>\n                </>\n              ) : (\n                <>\n                  <s.SpacerLarge />\n                  {blockchain.account === \"\" ||\n                    blockchain.smartContract === null ? (\n                    <s.Container\n                      ai={\"center\"}\n                      jc={\"center\"}\n                      style={{ height: \"60%\" }}\n                    >\n                      <StyledButton\n                        onClick={(e) => {\n                          e.preventDefault();\n                          dispatch(connect());\n                          getData();\n                        }}\n                      >\n                        CONNECT\n                      </StyledButton>\n                      {blockchain.errorMsg !== \"\" ? (\n                        <>\n                          <s.SpacerSmall />\n                          <s.TextDescription\n                            style={{\n                              textAlign: \"center\",\n                              color: \"var(--accent-text)\",\n                            }}\n                          >\n                            {blockchain.errorMsg}\n                          </s.TextDescription>\n                        </>\n                      ) : null}\n                    </s.Container>\n                  ) : (\n                    <>\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {feedback}\n                      </s.TextDescription>\n                      <s.SpacerMedium />\n                      <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                        <StyledButton\n                          disabled={claimingNft ? 1 : 0}\n                          onClick={(e) => {\n                            e.preventDefault();\n                            claimNFTs();\n                            getData();\n                          }}\n                        >\n                          {claimingNft ? \"BUSY\" : \"BUY\"}\n                        </StyledButton>\n                      </s.Container>\n                    </>\n                  )}\n                </>\n              )}\n            </div>\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"var(--accent)\",\n              borderRadius: 24,\n              padding: 24,\n            }}\n          >\n            <div\n              style={{\n                borderRadius: \"8px\",\n                overflow: \"auto\",\n                height: \"204px\",\n                width: \"204px\"\n              }}>\n              <s.TextTitle\n                style={{\n                  textAlign: \"left\",\n                  fontSize: 18,\n                  color: \"var(--djng-light)\",\n                }}\n              >\n                Minted NFTs\n              </s.TextTitle>\n\n              {data.imageURIs.length > 0 ?\n                <>\n\n                  <s.TextTitle\n                    style={{\n                      textAlign: \"left\",\n                      fontSize: 12,\n                      color: \"var(--mtrx-light)\",\n                      marginBottom: 8\n                    }}\n                  >\n                    Left: {data.maxSupply - data.totalSupply}\n                  </s.TextTitle>\n                  {data.imageURIs.map(function (url, i) {\n                    return (\n                      <img\n                        key={i}\n                        src={url}\n                        width=\"32\"\n                        height=\"32\"\n                        style={{\n                          marginRight: \"8px\",\n                          marginTop: \"8px\",\n                          borderRadius: 8,\n                          border: \"1px solid var(--djng-dark)\"\n                        }} />\n                    )\n                  })}\n                </>\n                :\n                <>\n                  <s.Container\n                    jc={\"center\"}\n                    ai={\"center\"}\n                    style={{\n                      height: \"90%\"\n                    }}\n                  >\n                    <img src={\"/config/images/lock.svg\"} />\n                  </s.Container>\n                </>\n              }\n            </div>\n          </s.Container>\n        </ResponsiveWrapper>\n        <s.SpacerSmall />\n        <StyledLink\n          href={CONFIG.LIGHTPAPER}\n          style={{\n            textAlign: \"center\",\n            color: \"var(--primary-text)\",\n          }}\n          download\n        >\n          Lightpaper\n        </StyledLink>\n        <s.SpacerLarge />\n        <s.SpacerLarge />\n        <s.TextDescription\n          style={{\n            textAlign: \"left\",\n            color: \"var(--dark-gray)\",\n            paddingLeft: \"24px\"\n          }}\n        >\n          © 2021 Million Lion - ml@millionlion.org - Inspired by HashLips\n        </s.TextDescription>\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}