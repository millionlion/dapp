{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","ResponsiveWrapper","StyledLogo","img","StyledPreview","StyledHeader","StyledLink","App","input","len","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","style","padding","backgroundColor","alt","src","textAlign","fontSize","fontWeight","color","target","href","length","substring","borderRadius","Number","width","onClick","e","preventDefault","abiResponse","abi","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","disabled","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","claimNFTs","paddingLeft","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d1c76aa.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: 512px 512px;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 14px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 128px;\n  @media (min-width: 767px) {\n    width: 128px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledPreview = styled.img`\n  width: 204px;\n  transition: width 0.5s;\n  transition: height 0.5s;\n  @media (max-width: 600px) {\n    display: none;\n  }\n`;\n\nexport const StyledHeader = styled.img`\n  position: absolute;\n  top: 48px;\n  right: 48px;\n  width: 20%\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: 4px dashed var(--secondary);\n  background-color: var(--accent);\n  border-radius: 100%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `The ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"left\"}\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n      >\n        <s.Container ai={\"center\"} jc={\"left\"} fd={\"row\"}>\n          <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\n          <s.TextTitle\n            style={{\n              textAlign: \"center\",\n              fontSize: 50,\n              fontWeight: \"bold\",\n              color: \"var(--accent-text)\",\n            }}\n          >\n            {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n          </s.TextTitle>\n          <StyledHeader alt={\"header\"} src={\"/config/images/header.svg\"} />\n        </s.Container>\n\n        <s.Container ai={\"center\"} jc={\"left\"} fd={\"row\"}>\n          <s.TextDescription\n            style={{\n              textAlign: \"left\",\n              color: \"var(--primary-text)\",\n              padding: 24\n            }}\n          >\n            <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n              {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n            </StyledLink>\n          </s.TextDescription>\n        </s.Container>\n\n        \n          \n          <s.TextTitle\n          style={{\n            textAlign: \"center\",\n            fontSize: 24,\n            color: \"var(--primary-text)\",\n          }}\n        >\n          Unveiling - Dec, 2021\n        </s.TextTitle>\n\n        <ResponsiveWrapper>\n          <StyledPreview alt={\"preview\"} src={\"/config/images/preview.png\"} />\n          <s.SpacerLarge />\n          <s.Container\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"var(--accent)\",\n              padding: 24,\n              borderRadius: 24,\n            }}\n          >\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  The sale has ended.\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  1 {CONFIG.NFT_NAME}\n                </s.TextTitle>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  =\n                </s.TextTitle>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  {CONFIG.DISPLAY_COST}{\" \"}\n                  {CONFIG.NETWORK.SYMBOL}.\n                </s.TextTitle>\n                <s.SpacerLarge />\n                {blockchain.account === \"\" ||\n                  blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"} style={{ width: 216 }}>\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {feedback}\n                    </s.TextDescription>\n                    <s.SpacerMedium />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"} style={{ width: 216 }}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? \"BUSY\" : \"BUY\"}\n                      </StyledButton>\n                    </s.Container>\n                  </>\n                )}\n              </>\n            )}\n          </s.Container>\n          <s.SpacerLarge />\n          <StyledPreview alt={\"logo\"} src={\"/config/images/preview.png\"} />\n        </ResponsiveWrapper>\n          <s.SpacerMedium />\n          <s.TextDescription\n          style={{\n            textAlign: \"left\",\n            color: \"var(--dark-gray)\",\n            paddingLeft: \"24px\"\n          }}\n          >\n            © 2021 Million Lion - ml@milliontoken.org - Inspired by HashLips\n          </s.TextDescription>\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}