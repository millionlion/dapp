{"version":3,"sources":["styles/globalStyles.js","components/Guide.js","redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","components/Minter.js","components/Minted.js","App.js","index.js"],"names":["Screen","styled","div","image","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledLink","a","StyledPreview","img","Guide","style","backgroundColor","borderRadius","padding","height","width","alt","src","initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","imageURIs","maxSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","getState","methods","call","i","tokenURI","trimmedTokenURI","replace","fetch","res","json","metadata","trimmedImagedURI","console","log","connectFailed","updateAccount","StyledButton","button","Minter","CONFIG","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","useEffect","getData","textAlign","Number","MAX_SUPPLY","color","NFT_NAME","target","href","MARKETPLACE_LINK","MARKETPLACE","onClick","e","preventDefault","headers","Accept","abiResponse","abi","configResponse","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","NETWORK","ID","SmartContractObj","CONTRACT_ADDRESS","on","location","reload","NAME","disabled","WEI_COST","gasLimit","GAS_LIMIT","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","claimNFTs","Minted","overflow","fontSize","length","marginBottom","map","url","marginRight","marginTop","border","ResponsiveWrapper","StyledLogo","StyledHeader","App","input","len","SCAN_LINK","SYMBOL","DISPLAY_COST","SHOW_BACKGROUND","SET_CONFIG","getConfig","config","fontWeight","substring","LIGHTPAPER","download","paddingLeft","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e688a8a2.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: 512px 512px;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 14px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport * as s from \"./../styles/globalStyles\";\n\nexport const StyledPreview = styled.img`\n  width: 204px;\n  transition: width 0.5s;\n  transition: height 0.5s;\n  @media (max-width: 600px) {\n    display: none;\n  }\n`;\n\nconst Guide = () => {\n  return (\n    <s.Container\n      jc={\"center\"}\n      ai={\"center\"}\n      style={{\n        backgroundColor: \"var(--accent)\",\n        borderRadius: 24,\n        padding: 24,\n      }}\n    >\n      <div style={{ height: \"204px\", width: \"204px\" }}>\n        <StyledPreview alt={\"preview\"} src={\"/config/images/preview.png\"} style={{ borderRadius: 24 }} />\n      </div>\n    </s.Container>\n  )\n}\n\nexport default Guide;\n","const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  imageURIs: [],\n  maxSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        imageURIs: action.payload.imageURIs,\n        maxSupply: action.payload.maxSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let imageURIs = []\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      let maxSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.maxSupply()\n        .call();\n\n      for (let i = 1; i <= totalSupply; i++) {\n        let tokenURI = await store\n          .getState()\n          .blockchain.smartContract.methods.tokenURI(`${i}`)\n          .call();\n\n        let trimmedTokenURI = tokenURI.replace(\"://\", \"/\");\n        let res = await fetch('https://millionlion.mypinata.cloud/' + trimmedTokenURI);\n        let metadata = await res.json();\n        let trimmedImagedURI = metadata.image.replace(\"://\", \"/\");\n\n        imageURIs[i] = 'https://millionlion.mypinata.cloud/' + trimmedImagedURI;\n      }\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          imageURIs,\n          maxSupply\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"./../redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./../redux/data/dataActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport * as s from \"./../styles/globalStyles\";\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nconst Minter = ({ CONFIG }) => {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `The ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  return (\n    <s.Container\n      jc={\"center\"}\n      ai={\"center\"}\n      style={{\n        backgroundColor: \"var(--accent)\",\n        padding: 24,\n        borderRadius: 24,\n      }}\n    >\n      <div style={{ height: \"204px\", width: \"204px\", textAlign: \"center\" }}>\n        <img src={\"/config/images/price.svg\"} />\n        {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n          <>\n            <s.TextTitle\n              style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n            >\n              The sale has ended.\n            </s.TextTitle>\n            <s.TextDescription\n              style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n            >\n              You can still find {CONFIG.NFT_NAME} on\n            </s.TextDescription>\n            <s.SpacerSmall />\n            <s.StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n              {CONFIG.MARKETPLACE}\n            </s.StyledLink>\n          </>\n        ) : (\n          <>\n            <s.SpacerLarge />\n            {blockchain.account === \"\" ||\n              blockchain.smartContract === null ? (\n              <s.Container\n                ai={\"center\"}\n                jc={\"center\"}\n                style={{ height: \"60%\" }}\n              >\n                <StyledButton\n                  onClick={(e) => {\n                    e.preventDefault();\n                    dispatch(connect());\n                    getData();\n                  }}\n                >\n                  CONNECT\n                </StyledButton>\n                {blockchain.errorMsg !== \"\" ? (\n                  <>\n                    <s.SpacerSmall />\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {blockchain.errorMsg}\n                    </s.TextDescription>\n                  </>\n                ) : null}\n              </s.Container>\n            ) : (\n              <>\n                <s.TextDescription\n                  style={{\n                    textAlign: \"center\",\n                    color: \"var(--accent-text)\",\n                  }}\n                >\n                  {feedback}\n                </s.TextDescription>\n                <s.SpacerMedium />\n                <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                  <StyledButton\n                    disabled={claimingNft ? 1 : 0}\n                    onClick={(e) => {\n                      e.preventDefault();\n                      claimNFTs();\n                      getData();\n                    }}\n                  >\n                    {claimingNft ? \"BUSY\" : \"BUY\"}\n                  </StyledButton>\n                </s.Container>\n              </>\n            )}\n          </>\n        )}\n      </div>\n    </s.Container>\n  )\n}\n\nexport default Minter;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport * as s from \"./../styles/globalStyles\";\n\nconst Minted = () => {\n  const data = useSelector((state) => state.data);\n\n  return (\n    <s.Container\n      jc={\"center\"}\n      ai={\"center\"}\n      style={{\n        backgroundColor: \"var(--accent)\",\n        borderRadius: 24,\n        padding: 24,\n      }}\n    >\n      <div\n        style={{\n          borderRadius: \"8px\",\n          overflow: \"auto\",\n          height: \"204px\",\n          width: \"204px\"\n        }}>\n        <s.TextTitle\n          style={{\n            textAlign: \"left\",\n            fontSize: 18,\n            color: \"var(--djng-light)\",\n          }}\n        >\n          Minted NFTs\n        </s.TextTitle>\n\n        {data.imageURIs.length > 0 ?\n          <>\n            <s.TextTitle\n              style={{\n                textAlign: \"left\",\n                fontSize: 12,\n                color: \"var(--mtrx-light)\",\n                marginBottom: 8\n              }}\n            >\n              Left: {data.maxSupply - data.totalSupply}\n            </s.TextTitle>\n            {data.imageURIs.map(function (url, i) {\n              return (\n                <img\n                  key={i}\n                  src={url}\n                  width=\"32\"\n                  height=\"32\"\n                  style={{\n                    marginRight: \"8px\",\n                    marginTop: \"8px\",\n                    borderRadius: 8,\n                    border: \"1px solid var(--djng-dark)\"\n                  }} />\n              )\n            })}\n          </>\n          :\n          <>\n            <s.Container\n              jc={\"center\"}\n              ai={\"center\"}\n              style={{\n                height: \"90%\"\n              }}\n            >\n              <img src={\"/config/images/lock.svg\"} />\n            </s.Container>\n          </>\n        }\n      </div>\n    </s.Container>\n  )\n}\n\nexport default Minted;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Guide from \"./components/Guide\";\nimport Minter from \"./components/Minter\";\nimport Minted from \"./components/Minted\";\nimport styled from \"styled-components\";\nimport * as s from \"./styles/globalStyles\";\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 128px;\n  @media (min-width: 767px) {\n    width: 128px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledHeader = styled.img`\n  position: absolute;\n  top: 48px;\n  right: 48px;\n  width: 20%\n`;\n\nfunction App() {\n  const data = useSelector((state) => state.data);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"left\"}\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n      >\n        <s.Container ai={\"center\"} jc={\"left\"} fd={\"row\"}>\n          <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\n          <s.TextTitle\n            style={{\n              textAlign: \"center\",\n              fontSize: 50,\n              fontWeight: \"bold\",\n              color: \"var(--accent-text)\",\n            }}\n          >\n            {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n          </s.TextTitle>\n          <StyledHeader alt={\"header\"} src={\"/config/images/header.svg\"} />\n        </s.Container>\n\n        <s.Container ai={\"center\"} jc={\"left\"} fd={\"row\"}>\n          <s.TextDescription\n            style={{\n              textAlign: \"left\",\n              color: \"var(--primary-text)\",\n              padding: 24\n            }}\n          >\n            <s.StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n              {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n            </s.StyledLink>\n          </s.TextDescription>\n        </s.Container>\n        <s.TextTitle\n          style={{\n            textAlign: \"center\",\n            fontSize: 24,\n            color: \"var(--primary-text)\",\n          }}\n        >\n          Unveiling - Dec, 2021\n        </s.TextTitle>\n        <s.SpacerSmall />\n        <ResponsiveWrapper>\n          <Guide />\n          <s.SpacerLarge />\n          <Minter CONFIG={CONFIG} />\n          <s.SpacerLarge />\n          <Minted />\n        </ResponsiveWrapper>\n        <s.SpacerSmall />\n        <s.StyledLink\n          href={CONFIG.LIGHTPAPER}\n          style={{\n            textAlign: \"center\",\n            color: \"var(--primary-text)\",\n          }}\n          download\n        >\n          Lightpaper\n        </s.StyledLink>\n        <s.SpacerLarge />\n        <s.SpacerLarge />\n        <s.TextDescription\n          style={{\n            textAlign: \"left\",\n            color: \"var(--dark-gray)\",\n            paddingLeft: \"24px\"\n          }}\n        >\n          © 2021 Million Lion - ml@millionlion.org - Inspired by HashLips\n        </s.TextDescription>\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}