{"version":3,"sources":["helpers/Files.js","contexts/ContractContext.js","styles/globalStyles.js","components/Guide.js","contexts/WalletContext.js","components/Minter.js","components/Minted.js","App.js","index.js"],"names":["fetchJson","path","a","fetch","headers","Accept","abiResponse","json","ContractContext","React","createContext","useContract","useContext","ContractProvider","children","useState","totalSupply","setTotalSupply","maxSupply","setMaxSupply","imageURIs","setImageURIs","useEffect","initContract","smartContract","getTotalSupply","_totalSupply","getMaxSupply","getImageURIs","abi","config","Web3EthContract","setProvider","NETWORK_PROVIDER","CONTRACT_ADDRESS","methods","call","i","tokenURI","trimmedTokenURI","replace","res","metadata","trimmedImagedURI","image","value","Provider","Screen","styled","div","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledLink","StyledPreview","img","Guide","style","backgroundColor","borderRadius","padding","height","width","alt","src","WalletContext","WalletProvider","setSmartContract","account","setAccount","message","setMessage","errorMessage","setErrorMessage","isMinting","setIsMinting","connect","window","ethereum","isMetaMask","_smartContract","request","method","accounts","NETWORK","ID","NAME","on","location","reload","mint","costWei","WEI_COST","gasLimit","GAS_LIMIT","console","log","NFT_NAME","send","to","from","once","err","then","receipt","StyledButton","button","Minter","CONFIG","textAlign","position","Number","MAX_SUPPLY","color","target","href","MARKETPLACE_LINK","MARKETPLACE","onClick","e","preventDefault","fontSize","bottom","disabled","overflow","textOverflow","whiteSpace","Minted","length","map","url","marginRight","marginTop","border","cursor","ResponsiveWrapper","StyledLogo","StyledHeader","App","input","len","SCAN_LINK","SYMBOL","DISPLAY_COST","SHOW_BACKGROUND","SET_CONFIG","getConfig","configResponse","fontWeight","substring","LIGHTPAPER","download","paddingLeft","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.441807a2.chunk.js","sourcesContent":["export const fetchJson = async (path) => {\n    const abiResponse = await fetch(path, {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n        },\n    });\n\n    return await abiResponse.json();\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport Web3EthContract from \"web3-eth-contract\";\nimport { fetchJson } from '../helpers/Files';\n\nconst ContractContext = React.createContext();\n\nexport function useContract() {\n    return useContext(ContractContext);\n}\n\nexport function ContractProvider({ children }) {\n    const [totalSupply, setTotalSupply] = useState(0);\n    const [maxSupply, setMaxSupply] = useState(0);\n    const [imageURIs, setImageURIs] = useState([]);\n\n    useEffect(async () => {\n        const smartContract = await initContract();\n        const _totalSupply = await getTotalSupply(smartContract);\n\n        setTotalSupply(_totalSupply);\n        setMaxSupply(await getMaxSupply(smartContract));\n        setImageURIs(await getImageURIs(smartContract, _totalSupply));\n    }, []);\n\n    const initContract = async () => {\n        const abi = await fetchJson(\"/config/abi.json\");\n        const config = await fetchJson(\"/config/config.json\");\n        \n        Web3EthContract.setProvider(config.NETWORK_PROVIDER);\n        return new Web3EthContract(abi, config.CONTRACT_ADDRESS);\n    }\n\n    const getTotalSupply = async (smartContract) => {\n        return await smartContract\n            .methods\n            .totalSupply()\n            .call();\n    }\n\n    const getMaxSupply = async (smartContract) => {\n        return await smartContract\n            .methods\n            .maxSupply()\n            .call();\n    }\n\n    const getImageURIs = async (smartContract, totalSupply) => {\n        let imageURIs = []\n\n        for (let i = totalSupply; i >= (totalSupply - 2); i--) {\n            let tokenURI = await smartContract\n                .methods\n                .tokenURI(`${i}`)\n                .call();\n\n            let trimmedTokenURI = tokenURI.replace(\"://\", \"/\");\n            let res = await fetch('https://millionlion.mypinata.cloud/' + trimmedTokenURI);\n            let metadata = await res.json();\n            let trimmedImagedURI = metadata.image.replace(\"://\", \"/\");\n\n            imageURIs[i] = 'https://millionlion.mypinata.cloud/' + trimmedImagedURI;\n        }\n\n        return imageURIs\n    }\n\n    const value = {\n        totalSupply,\n        imageURIs,\n        maxSupply\n    }\n\n    return (\n        <ContractContext.Provider value={value}>\n            {children}\n        </ContractContext.Provider>\n    )\n}\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: 512px 512px;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 14px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport * as s from \"./../styles/globalStyles\";\n\nexport const StyledPreview = styled.img`\n  width: 204px;\n  transition: width 0.5s;\n  transition: height 0.5s;\n  @media (max-width: 600px) {\n    display: none;\n  }\n`;\n\nconst Guide = () => {\n  return (\n    <s.Container\n      jc={\"center\"}\n      ai={\"center\"}\n      style={{\n        backgroundColor: \"var(--accent)\",\n        borderRadius: 24,\n        padding: 24,\n      }}\n    >\n      <div style={{ height: \"204px\", width: \"204px\" }}>\n        <StyledPreview alt={\"preview\"} src={\"/config/images/preview.png\"} style={{ borderRadius: 24 }} />\n      </div>\n    </s.Container>\n  )\n}\n\nexport default Guide;\n","import React, { useContext, useState } from 'react';\nimport Web3EthContract from \"web3-eth-contract\";\nimport { fetchJson } from '../helpers/Files';\n\nconst WalletContext = React.createContext();\n\nexport function useWallet() {\n    return useContext(WalletContext);\n}\n\nexport function WalletProvider({ children }) {\n    const [smartContract, setSmartContract] = useState({});\n    const [account, setAccount] = useState(\"\");\n    const [message, setMessage] = useState(\"Click buy to mint your NFT.\");\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [isMinting, setIsMinting] = useState(false);\n\n    const connect = async () => {\n        const abi = await fetchJson(\"/config/abi.json\");\n        const config = await fetchJson(\"/config/config.json\");\n\n        const { ethereum } = window;\n        const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n\n        if (!metamaskIsInstalled) {\n            setErrorMessage(\"Install Metamask.\");\n            \n            return;\n        }\n\n        Web3EthContract.setProvider(ethereum);\n        const _smartContract = new Web3EthContract(abi, config.CONTRACT_ADDRESS);\n\n        setSmartContract(_smartContract);\n\n        try {\n            const accounts = await ethereum.request({ method: \"eth_requestAccounts\" });\n            const networkId = await ethereum.request({ method: \"net_version\" });\n\n            if (networkId != config.NETWORK.ID) {\n                errorMessage(`Change network to ${config.NETWORK.NAME}.`);\n\n                return;\n            }\n\n            setAccount(accounts[0]);\n            \n            ethereum.on(\"accountsChanged\", (accounts) => { setAccount(accounts[0]); });\n            ethereum.on(\"chainChanged\", () => { window.location.reload(); });\n        } catch (err) {\n            errorMessage(\"Something went wrong.\");\n        }\n    }\n\n    const mint = async () => {\n        const config = await fetchJson(\"/config/config.json\");\n        let costWei = config.WEI_COST;\n        let gasLimit = config.GAS_LIMIT;\n\n        console.log(\"Cost: \", costWei);\n        console.log(\"Gas limit: \", gasLimit);\n\n        setMessage(`Minting your ${config.NFT_NAME}...`);\n        setIsMinting(true);\n\n        smartContract.methods\n            .mint(1)\n            .send({\n                gasLimit: gasLimit,\n                to: config.CONTRACT_ADDRESS,\n                from: account,\n                value: costWei,\n            })\n            .once(\"error\", (err) => {\n                console.log(err);\n                setMessage(\"Sorry, something went wrong please try again later.\");\n                setIsMinting(false);\n            })\n            .then((receipt) => {\n                console.log(receipt);\n                setMessage(`The ${config.NFT_NAME} is yours! go visit Opensea.io to view it.`);\n                setIsMinting(false);\n\n                // TODO: refresh data\n            });\n    }\n\n    const value = {\n        account,\n        errorMessage,\n        message,\n        isMinting,\n        connect,\n        mint\n    }\n\n    return (\n        <WalletContext.Provider value={value}>\n            {children}\n        </WalletContext.Provider>\n    )\n}\n\nexport default WalletContext;","import React, { useState } from \"react\";\nimport { useWallet } from \"./../contexts/WalletContext\";\nimport { useContract } from \"../contexts/ContractContext\";\nimport styled from \"styled-components\";\nimport * as s from \"./../styles/globalStyles\";\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nconst Minter = ({ CONFIG }) => {\n  const { totalSupply } = useContract();\n  const { account, message, errorMessage, isMinting, connect, mint } = useWallet();\n\n  return (\n    <s.Container\n      jc={\"center\"}\n      ai={\"center\"}\n      style={{\n        backgroundColor: \"var(--accent)\",\n        padding: 24,\n        borderRadius: 24,\n      }}\n    >\n      <div style={{\n        height: \"204px\",\n        width: \"204px\",\n        textAlign: \"center\",\n        position: \"relative\"\n      }}>\n        <img src={\"/config/images/price.svg\"} />\n        {Number(totalSupply) >= CONFIG.MAX_SUPPLY ? (\n          <>\n            <s.TextTitle\n              style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n            >\n              The sale has ended.\n            </s.TextTitle>\n            <s.TextDescription\n              style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n            >\n              You can still find {CONFIG.NFT_NAME} on\n            </s.TextDescription>\n            <s.SpacerSmall />\n            <s.StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n              {CONFIG.MARKETPLACE}\n            </s.StyledLink>\n          </>\n        ) : (\n          <>\n            <s.SpacerSmall />\n            {account === \"\" ?\n              <>\n                <s.Container\n                  ai={\"center\"}\n                  jc={\"center\"}\n                  style={{ height: \"60%\" }}\n                >\n                  <StyledButton\n                    onClick={(e) => {\n                      e.preventDefault();\n                      connect();\n\n                      // TODO: refresh data\n                    }}\n                  >\n                    CONNECT\n                    {account}\n                  </StyledButton>\n                  {errorMessage !== \"\" ? (\n                    <>\n                      <s.SpacerSmall />\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {errorMessage}\n                      </s.TextDescription>\n                    </>\n                  ) : null}\n                </s.Container>\n                <s.TextTitle\n                  style={{\n                    textAlign: \"left\",\n                    fontSize: 12,\n                    color: \"var(--djng-dark)\",\n                    bottom: \"0\",\n                    position: \"absolute\"\n                  }}\n                >\n                  Connect to wallet\n                </s.TextTitle>\n              </>\n              :\n              <>\n                <s.TextDescription\n                  style={{\n                    textAlign: \"center\",\n                    color: \"var(--accent-text)\",\n                  }}\n                >\n                  {message}\n                </s.TextDescription>\n                <s.SpacerMedium />\n                <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                  <StyledButton\n                    disabled={isMinting ? 1 : 0}\n                    onClick={(e) => {\n                      e.preventDefault();\n                      mint();\n\n                      // TODO: refresh data\n                    }}\n                  >\n                    {isMinting ? \"BUSY\" : \"BUY\"}\n                  </StyledButton>\n                </s.Container>\n                <s.TextTitle\n                  style={{\n                    textAlign: \"left\",\n                    fontSize: 12,\n                    color: \"var(--mtrx-dark)\",\n                    bottom: \"0\",\n                    position: \"absolute\",\n                    overflow: \"hidden\",\n                    textOverflow: \"ellipsis\",\n                    whiteSpace: \"nowrap\",\n                    width: \"100%\"\n                  }}\n                >\n                  Wallet: {account}\n                </s.TextTitle>\n              </>\n            }\n          </>\n        )}\n      </div>\n    </s.Container>\n  )\n}\n\nexport default Minter;\n","import React from \"react\";\nimport { useContract } from \"../contexts/ContractContext\";\nimport * as s from \"./../styles/globalStyles\";\n\nconst Minted = () => {\n  const { totalSupply, maxSupply, imageURIs } = useContract();\n\n  return (\n    <s.Container\n      jc={\"center\"}\n      ai={\"center\"}\n      style={{\n        backgroundColor: \"var(--accent)\",\n        borderRadius: 24,\n        padding: 24,\n      }}\n    >\n      <div\n        style={{\n          borderRadius: \"8px\",\n          height: \"204px\",\n          width: \"204px\",\n          position: \"relative\"\n        }}>\n        <s.TextTitle\n          style={{\n            textAlign: \"left\",\n            fontSize: 18,\n            color: \"var(--djng-light)\",\n          }}\n        >\n          Minted NFTs\n        </s.TextTitle>\n\n        {imageURIs.length > 0 ?\n          <>\n            <s.Container\n              fd={\"row\"}\n              style={{\n                overflow: \"auto\"\n              }}\n            >\n              {imageURIs.map(function (url, i) {\n                return (\n                  <img\n                    key={i}\n                    src={url}\n                    width=\"128\"\n                    height=\"128\"\n                    style={{\n                      marginRight: \"8px\",\n                      marginTop: \"12px\",\n                      borderRadius: 8,\n                      border: \"1px solid var(--djng-dark)\"\n                    }} />\n                )\n              })}\n\n              <img\n                key={\"osb\"}\n                src={\"/config/images/opensea-banner.svg\"}\n                style={{\n                  marginTop: \"12px\",\n                  borderRadius: 8,\n                  border: \"1px solid var(--djng-dark)\",\n                  cursor: \"pointer\"\n                }}\n                onClick={(e) => {\n                  e.preventDefault();\n                  window.location.href = \"https://opensea.io/collection/millionlion\"\n                }}\n              />\n            </s.Container>\n\n            <s.TextTitle\n              style={{\n                textAlign: \"left\",\n                fontSize: 12,\n                color: \"var(--mtrx-dark)\",\n                bottom: \"0\",\n                position: \"absolute\"\n              }}\n            >\n              Left: {maxSupply - totalSupply}\n            </s.TextTitle>\n          </>\n          :\n          <>\n            <s.Container\n              jc={\"center\"}\n              ai={\"center\"}\n              style={{\n                height: \"90%\"\n              }}\n            >\n              <img src={\"/config/animations/spinner.svg\"} />\n            </s.Container>\n          </>\n        }\n      </div>\n    </s.Container>\n  )\n}\n\nexport default Minted;\n","import React, { useEffect, useState } from \"react\";\nimport { useContract } from \"./contexts/ContractContext\";\nimport Guide from \"./components/Guide\";\nimport Minter from \"./components/Minter\";\nimport Minted from \"./components/Minted\";\nimport styled from \"styled-components\";\nimport * as s from \"./styles/globalStyles\";\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 128px;\n  @media (min-width: 767px) {\n    width: 128px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledHeader = styled.img`\n  position: absolute;\n  top: 48px;\n  right: 48px;\n  width: 20%\n`;\n\nfunction App() {\n  const { totalSupply } = useContract();\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"left\"}\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n      >\n        <s.Container ai={\"center\"} jc={\"left\"} fd={\"row\"}>\n          <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\n          <s.TextTitle\n            style={{\n              textAlign: \"center\",\n              fontSize: 50,\n              fontWeight: \"bold\",\n              color: \"var(--accent-text)\",\n            }}\n          >\n            {totalSupply} / {CONFIG.MAX_SUPPLY}\n          </s.TextTitle>\n          <StyledHeader alt={\"header\"} src={\"/config/images/header.svg\"} />\n        </s.Container>\n\n        <s.Container ai={\"center\"} jc={\"left\"} fd={\"row\"}>\n          <s.TextDescription\n            style={{\n              textAlign: \"left\",\n              color: \"var(--primary-text)\",\n              padding: 24\n            }}\n          >\n            <s.StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n              {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n            </s.StyledLink>\n          </s.TextDescription>\n        </s.Container>\n        <s.TextTitle\n          style={{\n            textAlign: \"center\",\n            fontSize: 24,\n            color: \"var(--primary-text)\",\n          }}\n        >\n          Unveiling - Dec, 2021\n        </s.TextTitle>\n        <s.SpacerSmall />\n        <ResponsiveWrapper>\n          <Guide />\n          <s.SpacerLarge />\n          <Minter CONFIG={CONFIG} />\n          <s.SpacerLarge />\n          <Minted />\n        </ResponsiveWrapper>\n        <s.SpacerSmall />\n        <s.StyledLink\n          href={CONFIG.LIGHTPAPER}\n          style={{\n            textAlign: \"center\",\n            color: \"var(--primary-text)\",\n          }}\n          download\n        >\n          Lightpaper\n        </s.StyledLink>\n        <s.SpacerLarge />\n        <s.SpacerLarge />\n        <s.TextDescription\n          style={{\n            textAlign: \"left\",\n            color: \"var(--dark-gray)\",\n            paddingLeft: \"24px\"\n          }}\n        >\n          © 2021 Million Lion - ml@millionlion.org - Inspired by HashLips\n        </s.TextDescription>\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ContractProvider } from './contexts/ContractContext';\nimport { WalletProvider } from \"./contexts/WalletContext\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <ContractProvider>\n    <WalletProvider>\n      <App />\n    </WalletProvider>\n  </ContractProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}